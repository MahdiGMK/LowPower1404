meet: Energy profiler tool based on SimpleScalar/ARM Tool Set version 3.0 of November, 2000.
Developed by Mostafa Bazzaz at 2011.

Copyright (c) 1994-2000 by Todd M. Austin.  All Rights Reserved.
This version of SimpleScalar is licensed for academic non-commercial use only.

sim: command line: ./meet -initial:pc 0x00100040 /mnt/hgfs/D/tmp/UsingUbuntuCompiler/network/dijkstra/app 

sim: simulation started @ Wed Jun 17 16:58:46 2015, options follow:

sim-profile: This simulator implements a functional simulator with
profiling support.  Run with the `-h' flag to see profiling options
available.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-initial:pc           1048640 # analysis start address
-finish:pc                  0 # program execution end address
-all                    false # enable all profile options
-iclass                 false # enable instruction class profiling
-iprof                  false # enable instruction profiling
-uprof                  false # enable unit profiling 
-brprof                 false # enable branch instruction profiling
-amprof                 false # enable address mode profiling
-segprof                false # enable load/store address segment profiling
-tsymprof               false # enable text symbol profiling
-taddrprof              false # enable text address profiling
-dsymprof               false # enable data symbol profiling
-trace:inst             false # enable instruction fetch profiling
-trace:data             false # enable data fetch profiling
-internal               false # include compiler-internal symbols during symbol profiling
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
# -trace:filename       <null> # Fullpath of the tracefile
-trace:block            false # enable basicblock profiling
# -trace:blockListFilename       <null> # Fullpath of the file containing the address and size of each block

sim: ** starting functional simulation **
sim: ** fast forwarding to 0x00100040 **
sim: ** starting analysis **
sim: ** 0x00100100 visited **

sim: ** simulation statistics **
sim_num_insn               20182751 # total number of instructions executed after analysis started
sim_num_refs                5738109 # total number of loads and stores executed
sim_num_loads               4553951 # total number of read memory accesses
sim_num_flash_loads          506163 # total number of Flash read memory accesses
sim_num_sram_loads          4047788 # total number of SRAM read memory accesses
sim_num_stores              1268353 # total number of write memory accesses
sim_total_energy       47478056.0000 # total energy consumption (nJ)
sim_elapsed_time                  6 # total simulation time in seconds
sim_inst_rate          3363791.8333 # simulation speed (in insts/sec)
instruction_bus_activity    264029519 # total number of bit flip in instruction bus
instruction_bus_weight    225973408 # total number of 1 count in instruction bus
regbank_activity           36657797 # total number of bit flip in register bank
ld_text_base           0x00100000 # program text (code) segment base
ld_text_bound          0x00103388 # program text (code) segment bound
ld_text_size                  13192 # program text (code) size in bytes
ld_data_base           0x00103388 # program initialized data segment base
ld_data_bound          0x0020c288 # program initialized data segment bound
ld_data_size                1085184 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0xc0000000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x001000f8 # program entry point (initial PC)
ld_environ_base        0xbfffc000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   19 # total number of pages allocated
mem.page_mem                    76k # total size of memory pages allocated
mem.ptab_misses                  19 # total first level page table misses
mem.ptab_accesses          52116990 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

